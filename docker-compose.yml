version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: carbon_analytics_db
    environment:
      POSTGRES_DB: carbon_analytics
      POSTGRES_USER: carbon_user
      POSTGRES_PASSWORD: carbon_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carbon_user -d carbon_analytics"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: carbon_analytics_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carbon_analytics_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://carbon_user:carbon_password@postgres:5432/carbon_analytics
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: carbon_analytics_dashboard
    ports:
      - "8050:8050"
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  etl:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carbon_analytics_etl
    command: python -m etl.main
    environment:
      - DATABASE_URL=postgresql://carbon_user:carbon_password@postgres:5432/carbon_analytics
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 